Notes
===============

/********************************************************************\
NOTICES FOR THE GROUP:

   NOTE FOR MATT:
      PLEASE STOP SPAMMING COMMITS FOR NO REASON
      YOU ALSO NEED TO FIND OUT HOW TO USE GIT
      AND UNDERSTAND WHAT IS HAPPENING
      AND THEN CONTRIBUTE TO THE TESTING FUNCTIONS

   GOOD NEWS EVERYONE!
      I ACTUALLY READ THE QUESTION, AND IT TURNS OUT THAT ALL WE HAVE
      TO DO FOR THIS WEEK IS MAKE THE STRUCT AND MAKE A PROGRAM TO
      TEST EACH OF THE FUNCTIONS IN THE .H
      :D

   TO DO LIST:
      LISTEN ERP
      PLS CONSULT THE TODO LIST AND UPDATE IT ONCE ALL TASK ARE 
      [COMPLETE].
      UPDATE EHT IF YOU THINK YOU ARE SEUR WHAT TO DO. TEK ENETIATIVE
      KDEN GOOD.

   CODE STYLING:
      WE WILL BE STICKING COMPLETELY TO THE STYLE GUIDE:
         3 SPACE TABS (CHANGE YOUR SETTINGS)
         AND NEVER GOING OVER 72 CHARACTERS (THERE IS A HELPFUL
         SETTING TO SET RULERS)
            THIS APPLIES TO ALL FILES - NOT JUST CODE (THIS IS TO
            MAKE IT LOOK PRETTY)
      kthnxbye
/********************************************************************\

Nope:
//Things To Do -
//   Matt your wrong
//   - Game.c
//      - Set up data storage
//         - Make structs for verts, edges and faces
//         - Methods for doing pointers between arrays for us (?)
//         - Other methods we think we'll need
//         - Make lists, finialse and done??
//         
//   - Testing Stuff
//      -???

To do for now (needs updating):
- Create structs for verts, edges, and regions in the .c
- Make the game struct then put it in the .h as Game
- Plan out how to do the list and pointers between them
- Create the functions 

Plan:
- Have a player struct that stores things like:
   - KPI
   - Papers
   - Patents
   - Different types of student
   - Etc. -- TODO fill in
- Verticy struct:
   - Owner
   - Content type in .h
- Edge struct:
   - Owner (in other words, is there a grant on it, if so who owns it)
   - Adjacent vertices
- Region
   - Student producer
   - Dice number
   - Adjacent vertices
